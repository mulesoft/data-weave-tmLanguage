# [PackageDev] target_format: plist, ext: tmLanguage
name: DataWeave
scopeName: source.data-weave
fileTypes: [dwl]
uuid: ba6390ae-c50f-4dce-97f1-951dab8fc607

patterns:
  - include: "#namespace"
  - include: "#comment"
  - include: "#document"
  - include: "#constant"
  - include: "#keyword"
  - include: "#directive"
  - include: "#identifier"
  - include: "#selector"

repository:
  namespace: 
    patterns:
      - match: (ns)\s+([[:alpha:]][[:alnum:]_]*)\s+([^\s]*)
        captures:
          1: { name: storage.type.dw }
          2: { name: entity.name.variable.dw }
          3: { name: markup.underline.link }

  comment:
    patterns:
      - name: comment.block.dw
        begin: /\*
        end: \*/
      - match: \s*((//).*$\n?)
        captures:
          '1': {name: comment.line.double-slash.dw}
          '2': {name: punctuation.definition.comment.dw}

  document:
    patterns:
      - name: keyword.operator.body-marker.dw
        match: (---)

  constant:
    patterns:
      - include: "#regex"
      - include: "#string-constants"
      - include: "#number-constants"
      - name: constant.language.dw
        match: (?<![[:alnum:]])(?:true|false|null)(?![[:alnum:]_])

  keyword:
    patterns:
      - name: keyword.control.dw
        match: (?<![[:alnum:]])(?:if|else|unless|do|using|default|match|case|update)(?![[:alnum:]_])
      - name: keyword.operator.dw
        match: (?<![[:alnum:]_])(?:and|or|not|as|is)(?![[:alnum:]_])
      - name: keyword.operator.case.dw
        match: (->)
      - name: keyword.operator.assignment.metadata.dw
        match: (<~)
      - name: keyword.operator.comparison.dw
        match: (~=|==|!=|!=|<=|>=|<|>)
      - name: keyword.operator.assignment.dw
        match: (=)
      - name: keyword.operator.declaration.dw
        match: (:)
      - name: keyword.operator.arithmetic.dw
        match: (\-|\+|\*|\/)
      - name: keyword.operator.implement.dw
        match: \?\?\?

  directive:
    patterns:
      - name: meta.directive.version.dw
        begin: (%dw)\s+([0-9]+\.[0-9]+)(?!\$|\.)
        beginCaptures:
          '1': {name: keyword.directive.version.dw}
          '2': {name: constant.numeric.version.dw}
        end: (?=\n)
      - name: storage.type.dw
        match: (?<![[:alnum:]_])(?:import|fun|ns|input|var|type|annotation|output|from)(?![[:alnum:]_])

  identifier:
    patterns:
      - name: entity.name.variable.dw
        match: '[[:alpha:]][[:alnum:]_]*'

  selector:
    patterns:
      - name: storage.type.dw
        match: \.\.|\.\*|\.\^|\.\@|\.
      - name: storage.type.dw
        begin: \[
        end: \]
        patterns:
          - include: $self

  regex:
    patterns:
      - name: string.regexp.dw
        match: \/.*\/

  string-constants:
    patterns:
    - name: string.quoted.double.dw
      begin: '"'
      beginCaptures:
        '0': { name: punctuation.definition.string.begin.dw }
      end: '"'
      endCaptures:
        '0': { name: punctuation.definition.string.end.dw }
      patterns:
        - include: "#string-interpolation"
    - name: string.quoted.single.dw
      begin: "'"
      beginCaptures:
        '0': { name: punctuation.definition.string.begin.dw }
      end: "'"
      endCaptures:
        '0': { name: punctuation.definition.string.end.dw }
      patterns:
        - include: "#string-interpolation" 
    - name: string.quoted.backtick.dw
      begin: "`"
      beginCaptures:
        '0': { name: punctuation.definition.string.begin.dw }
      end: "`"
      endCaptures:
        '0': { name: punctuation.definition.string.end.dw }
      patterns:
        - include: "#string-interpolation" 

  string-interpolation:
    patterns:
      - begin: \$\(
        beginCaptures:
          0: {name: keyword.other.dw}
        end: \)
        endCaptures:
          0: {name: keyword.other.dw}
        patterns:
          - include: "#selector"
          - include: "$self"
      - match: (\$)([[:alpha:]][[:alnum:]_]*)
        captures:
          1: { name: keyword.other.dw }
          2: { name: entity.name.variable.dw }

  number-constants:
    patterns:
      - name: constant.numeric.dw
        match: (?:0|[1-9][0-9]*)(?:\.[0-9]+)?(?:[eE][0-9]*)?
